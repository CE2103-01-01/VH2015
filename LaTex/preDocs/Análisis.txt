void vPager::pageUp(std::string, int, void*)
Explicación: este método realiza una búsqueda de un archivo, lo cual se considerará de duración constante. Luego, de encontrarlo, copia su contenido en una dirección de memoria byte a byte y cierra el archivo.
Factor de crecimiento: lineal y dependiente del tamaño del archivo. El ciclo se ejecuta una vez por cada byte.
Mejor caso: objetos pequeños, ya que repetirá el ciclo menos veces.
Peor caso: objetos grandes, ya que repetirá el ciclo más veces.

std::string vPager::pageDown(void* data, int id, int dSize)
Explicación: crea un archivo con ruta correspondiente al id, proceso que se considerará constante para cada entrada. Posteriormente, copia byte a byte el contenido del parámetro en el archivo creado.
Factor de crecimento: lineal y dependiente del tamaño del objeto. El ciclo se ejecuta una vez por cada byte.
Mejor caso: objetos pequeños, ya que repetirá el ciclo menos veces.
Peor caso: objetos grandes, ya que repetirá el ciclo más veces.

void vDefragment();
Explicación: se toma el iterador de los metadatos. Se accede uno a uno a todas las entradas. Si y solo si están en el mainChunk, compara su posición con la posición actual, la cual inicia apuntando al primer espacio de vHeap; de ser diferentes hace los reajustes necesarios.
Factor de crecimiento: lineal, el ciclo se repite una vez por cada dato en metadata.
Mejor caso: muchos datos paginados y pocos en vHeap, ya que no reajusta datos paginados.
Peor caso: ningún dato paginado, ya que tendrá que hacer más comparaciones y probablemente más reajustes.